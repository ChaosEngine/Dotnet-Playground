@model IEnumerable<DecoratedBlog>
@inject Microsoft.Extensions.Configuration.IConfiguration Conf
@using EFGetStarted.AspNetCore.ExistingDb.Controllers
@{
	ViewBag.Title = "Blogs";
}

<h2>@ViewData["Title"]</h2>
<p>
	<a href="~/@(BlogsController.ASPX)/@(nameof(BlogsController.Create))">Create New</a>
</p>

<table class="table">
	<tr><th>Id</th><th>Url</th></tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.BlogId)
			</td>
			<td>
				@await Html.PartialAsync("BlogPartial", item)
			</td>
		</tr>
	}
</table>

@section scripts
{
	<script type="text/javascript">
		$(function () {
			//$('form').validate({
			$.validator.setDefaults({
				debug: true,
				submitHandler: function (form) {
					FormSubmit(form); return false;
					//alert('submitted'); return false;
				}
			});
		});

		function FormSubmit(form) {
			var tr = $(form).parents('tr:first');
			var id = $(form).data('id');
			var url = $(form).find('#inp_' + id).val();
			var operation = $(form).find("input[type=submit]:focus").val();
			var delete_operation = '@(BlogActionEnum.Delete)';

			if (operation != delete_operation && (url == '' || url == tr.find('span.displaying').text()))
				return;

			var hedrs = { 'RequestVerificationToken': $(form).find('input[name="__RequestVerificationToken"]').val() }
			var serialized_form = $(form).serialize();

			$.ajax({
				method: operation == delete_operation ? 'DELETE' : 'POST',
				url: 'Blogs/' + operation + '/' + id + '/true',
				dataType: 'json',
				data: serialized_form,
				headers: operation == delete_operation ? hedrs : null
			}).done(function (blog, textStatus, jqXHR) {
				if (blog == "error") {
					alert("error");
					return;
				}
				else if (blog == "deleted") {
					$(tr).remove();
					return;
				}

				var edit = $(form).find('.edit');
				edit.val(blog.url);
				var span = tr.find('span.displaying');
				span.text(blog.url);
			}).fail(function (jqXHR, textStatus, errorThrown) {
				alert("error: " + textStatus + " " + errorThrown);
			});
		}
	</script>
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
