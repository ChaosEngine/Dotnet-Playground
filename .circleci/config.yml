version: 2.1
jobs:
  run-tests:
    docker:
      - image: mcr.microsoft.com/playwright:next
    # Steps to the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Install framework
          # should be 20.04 but...whatever
          command: |
            curl -O https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
            dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb
            apt update && apt install -y dotnet-sdk-6.0
      - run:
          name: Show versions
          command: |
            dotnet --info
            node --version
            npm --version
      - run:
          name: Install project dependencies
          command: |
            dotnet restore
            cd DotnetPlayground.Web
            npm i
            npx playwright install
            cd ..
      - run:
          name: Run Unit and Integration Tests
          command: |
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            dotnet test -v n --results-directory:"./test_coverage" --collect:"Code Coverage" --logger "trx"
      - run:
          name: End-2-End Playwright browser tests
          command: |
            cd DotnetPlayground.Web
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            npx playwright test
      - store_artifacts:
          path: ./test_coverage
      - store_artifacts:
          path: DotnetPlayground.Web/e2e/playwright-report
      - run:
          name: test results
          when: always
          command: |
              dotnet tool install -g trx2junit
              export PATH="$PATH:$HOME/.dotnet/tools"
              trx2junit ./test_coverage/*.trx
      - store_test_results:
          path: ./test_coverage/
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    # Steps to the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Install node/npm
          # keep an eye on the node/npm version here
          command: curl -sL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs
      - run:
          name: "Build Application according to some given configuration"
          command: dotnet publish -c Release --self-contained -r linux-x64 DotnetPlayground.Web
# Invoke jobs via workflows
workflows:
  test_and_build:
    jobs:
      - run-tests:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
                - dotnet-7
      - build:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
                - dotnet-7
          requires:
            - run-tests