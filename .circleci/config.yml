version: 2.1

jobs:
  Pomelo-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:9.0
    # Steps for the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Show versions
          command: |
            dotnet --info
      - run:
          name: Install project dependencies
          command: |
            #needed for code coverage
            apt update && apt install -y libxml2
            cd Caching-MySQL/test/Pomelo.Extensions.Caching.MySql.Tests
            dotnet restore
      - run:
          name: Run Unit Tests
          command: |
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            dotnet test -v n --results-directory:"./test_coverage" --collect:"Code Coverage" --logger "trx" Caching-MySQL/test/Pomelo.Extensions.Caching.MySql.Tests
      - store_artifacts:
          path: ./test_coverage
      - run:
          name: test results
          when: always
          command: |
              dotnet tool install -g trx2junit
              export PATH="$PATH:$HOME/.dotnet/tools"
              trx2junit ./test_coverage/*.trx
      - store_test_results:
          path: ./test_coverage/


  InkBall-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:9.0
    # Steps for the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Show versions
          command: |
            dotnet --info
      - run:
          name: Install project dependencies
          command: |
            #needed for code coverage
            apt update && apt install -y libxml2
            cd InkBall/test/InkBall.Tests
            dotnet restore
      - run:
          name: Run Unit Tests
          command: |
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            dotnet test -v n --results-directory:"./test_coverage" --collect:"Code Coverage" --logger "trx" InkBall/test/InkBall.Tests
      - store_artifacts:
          path: ./test_coverage
      - run:
          name: test results
          when: always
          command: |
              dotnet tool install -g trx2junit
              export PATH="$PATH:$HOME/.dotnet/tools"
              trx2junit ./test_coverage/*.trx
      - store_test_results:
          path: ./test_coverage/


  DotnetPlayground-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:9.0
    # Steps for the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Show versions
          command: |
            dotnet --info
      - run:
          name: Install project dependencies
          command: |
            #needed for code coverage
            apt update && apt install -y libxml2
            cd DotnetPlayground.Tests
            dotnet restore
      - run:
          name: Run Unit Tests
          command: |
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            dotnet test -v n --results-directory:"./test_coverage" --collect:"Code Coverage" --logger "trx" DotnetPlayground.Tests
      - store_artifacts:
          path: ./test_coverage
      - run:
          name: test results
          when: always
          command: |
              dotnet tool install -g trx2junit
              export PATH="$PATH:$HOME/.dotnet/tools"
              trx2junit ./test_coverage/*.trx
      - store_test_results:
          path: ./test_coverage/


  Playwright-tests:
    docker:
      - image: mcr.microsoft.com/playwright:latest
    # Steps for the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Install framework
          command: |
            apt update; apt install software-properties-common -y
            add-apt-repository ppa:dotnet/backports -y
            apt install -y dotnet-sdk-9.0
            npm i -g pnpm@latest
      - run:
          name: Show versions
          command: |
            dotnet --info
            node --version
            pnpm --version
      - run:
          name: Install project dependencies
          command: |
            dotnet restore
            pnpm i
            npx playwright install --only-shell chromium
      - run:
          name: End-2-End Playwright browser tests
          command: |
            export DBKind="sqlite" ConnectionStrings__Sqlite="Filename=./bin/Debug/Blogging.db"
            npx playwright test
      - store_artifacts:
          path: e2e/playwright-report


  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:9.0
    # Steps for the job
    steps:
      - checkout
      - run:
          name: Update submodules
          command: |
            git submodule sync
            git submodule update --init --recursive --jobs 8
      - run:
          name: Install node/npm
          # keep an eye on the node/npm version here
          command: |
            curl -SLO https://deb.nodesource.com/nsolid_setup_deb.sh
            chmod 500 nsolid_setup_deb.sh
            ./nsolid_setup_deb.sh 21
            apt-get install -y nodejs
            npm i -g pnpm@latest
      - run:
          name: "Build Application according to some given configuration"
          command: dotnet publish -c Release --self-contained -r linux-x64 DotnetPlayground.Web


# Invoke jobs via workflows
workflows:
  version: 2
  test_and_build:
    jobs:
      - Pomelo-tests:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
      - InkBall-tests:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
      - DotnetPlayground-tests:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
      - Playwright-tests:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
      - build:
          filters:
            branches:
              only:
                - master
                - dev
                - circleci-project-setup
          requires:
            - Pomelo-tests
            - InkBall-tests
            - DotnetPlayground-tests
            - Playwright-tests
