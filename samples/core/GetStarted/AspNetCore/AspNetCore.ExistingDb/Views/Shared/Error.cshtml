@model int
@{
	ViewData["Title"] = "Error";

	string status_message = "";
	switch (Model)
	{
		case Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest:
			status_message = "Bad request: The request cannot be fulfilled due to bad syntax";
			break;

		case Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden:
			status_message = "Forbidden";
			break;

		case Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound:
			status_message = "Page not found";
			break;

		case Microsoft.AspNetCore.Http.StatusCodes.Status408RequestTimeout:
			status_message = "The server timed out waiting for the request";
			break;

		case Microsoft.AspNetCore.Http.StatusCodes.Status500InternalServerError:
			status_message = "Internal Server Error - server was unable to finish processing the request";
			break;

		case Microsoft.AspNetCore.Http.StatusCodes.Status503ServiceUnavailable:
			status_message = "Service unavailable - The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state";
			break;

		default:
			status_message = "That’s odd... Something we didn't expect happened";
			break;
	}
}

@*<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

<h3>Development Mode</h3>
<p>
	Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
	<strong>Development environment should not be enabled in deployed applications</strong>, as it can result in sensitive information from exceptions being displayed to end users. For local debugging, development environment can be enabled by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>, and restarting the application.
</p>*@

<div class="jumbotron">
	<h1>Error @Model</h1>
	<h3>@status_message</h3>
</div>
