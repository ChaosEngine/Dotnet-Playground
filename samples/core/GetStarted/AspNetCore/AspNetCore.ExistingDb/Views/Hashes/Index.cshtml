@model EFGetStarted.AspNetCore.ExistingDb.Models.Hashes
@inject  Microsoft.Extensions.Configuration.IConfiguration Conf
@{
	ViewBag.Title = "MyRainbow rainbow table";
}
<h2>Rainbow table trivial example</h2>
@{
	if (((EFGetStarted.AspNetCore.ExistingDb.Models.HashesInfo)ViewBag.Info) != null && ((EFGetStarted.AspNetCore.ExistingDb.Models.HashesInfo)ViewBag.Info).IsCalculating == false)
	{
		<p>
			Search for <strong>@(((EFGetStarted.AspNetCore.ExistingDb.Models.HashesInfo)ViewBag.Info).KeyLength)</strong> character MD5 or SHA256 hash source string. Alphabet is '@(((EFGetStarted.AspNetCore.ExistingDb.Models.HashesInfo)ViewBag.Info).Alphabet)'
		</p>
		<p>
			Hashes count: <strong>@(((EFGetStarted.AspNetCore.ExistingDb.Models.HashesInfo)ViewBag.Info).Count)</strong>
			last updated @DateTime.Now.ToString()
		</p>
	}
	else
	{
		<p>Calculating...wait about 10 secs or so...and refresh the page</p>
	}
}
<form action="@Conf["AppRootPath"]Hashes/Search" method="post" id="theForm" class="form-horizontal" role="form">
	<div class="form-horizontal">
		<div asp-validation-summary="All" class="text-danger"></div>
		<div class="form-group">
			@Html.AntiForgeryToken()
			@Html.Hidden("ajax", false)
			@Html.Hidden("Key", "dummy")
			@Html.Hidden("HashMD5", "dummy")
			@Html.Hidden("HashSHA256", "dummy")
			<div class="col-md-10">
				@foreach (EFGetStarted.AspNetCore.ExistingDb.Models.KindEnum knd in Enum.GetValues(typeof(EFGetStarted.AspNetCore.ExistingDb.Models.KindEnum)))
				{
					<label class="radio-inline"><input asp-for="Kind" type="radio" id="@("knd" + (int)knd)" name="Kind" value="@knd" />@knd</label>
					<span asp-validation-for="Kind" class="text-danger"></span>
				}

				<input asp-for="Search" id="txtSearch" placeholder="hash to decode" class="form-control" />
				<span asp-validation-for="Search" class="text-danger"></span>
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-10">
				<button type="submit" id="btnSearch" class="btn btn-lg btn-warning"><span class='disabled-animation'></span>Search</button>
			</div>
		</div>
		<div class="form-group">
			<div id="divResult" class="col-md-10">@(Model != null && string.IsNullOrEmpty(Model.Key) ? "nothing found" : "")</div>
		</div>
	</div>
</form>
<table id="result_tab" class="table table-striped table-bordered" style='@(Model != null ? "" : "display:none")'>
	<thead><tr><th>Key</th><th>MD5</th><th>SHA256</th></tr></thead>
	<tbody>
		<tr>
			<td id="res_cel_key">@(Model != null ? Model.Key : "")</td>
			<td id="res_cel_md5">@(Model != null ? Model.HashMD5 : "")</td>
			<td id="res_cel_sha256">@(Model != null ? Model.HashSHA256 : "")</td>
		</tr>
	</tbody>
</table>
@section scripts
{
	<script type="text/javascript">
		$(function () {
			$.validator.addMethod('hashlength',
				function (value, element, params) {
					var kind = $(params).val();

					if ((kind == "MD5" && value.length != 32) || (kind == "SHA256" && value.length != 64))
						return false;

					return true;
				});

			//$('#theForm').validate({
			$.validator.setDefaults({
				debug: true,
				submitHandler: function (form) {
					AjaxifySearch(form); return false;
					//alert('submitted'); return false;
				},
				rules: {
					Search: {
						hashlength: '.radio-inline input:radio:checked'
					},
				},
				messages: {
					Search: {
						hashlength: $('#txtSearch').data("val-hashlength")
					}
				}
			});
		});

		function AjaxifySearch(e) {
			var divResult = $('#divResult');
			var search = $('#txtSearch').val();
			if (search == null || search == '') {
				divResult.text('no hash to decode');
				return;
			}

			var sha_kind = $('.radio-inline input:radio:checked').val();
			switch (sha_kind) {
				case 'MD5':
					if (search.length < 32) {
						divResult.text('search.length < 32 characters, too short');
						return;
					}
					break;
				case 'SHA256':
					if (search.length < 64) {
						divResult.text('search.length < 64 characters, too short');
						return;
					}
					break;
				default:
					divResult.text('no hash method selected');
					return;
			}

			var button = $('#btnSearch');
			button.prop('disabled', true);
			button.html("<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> Loading...");
			divResult.text('');
			$('#result_tab').hide();

			var token = $('input[name="__RequestVerificationToken"]').val();
			var hedrs = { 'RequestVerificationToken': token }

			$.ajax({
				method: "POST", url: '@Conf["AppRootPath"]Hashes/Search',
				headers: hedrs,
				data: {
					"Search": search, "Kind": sha_kind,
					"Key": "dummy", "HashMD5": "dummy", "HashSHA256": "dummy",
					"ajax": true
				},
			}).done(function (found) {
				button.prop('disabled', false);
				button.html("<span class='disabled-animation'></span> Search");

				if (found == null || found == '') {
					divResult.text('nothing found');
					return;
				}
				//divResult.text(found.key + ' ' + found.hashMD5 + ' ' + found.hashSHA256);
				$('#result_tab').show();
				$('#res_cel_key').text(found.key);
				$('#res_cel_md5').text(found.hashMD5);
				$('#res_cel_sha256').text(found.hashSHA256);
			});
		}
	</script>
	@await Html.PartialAsync("_ValidationScriptsPartial")
}