function BruteForceOnLoad(){let e=null;const a=[...document.scripts].find((e=>-1!==e.src.indexOf("BruteForce")))?.src,r=a?new URL(a).search:"";function n(e,a,n,t,s,o,l){let i=Math.pow(t.length,o),c=[],d=null;function u(e){f("#pParagraph",["ERROR: Line ",e.lineno," in ",e.filename,": ",e.message].join(""))}function h(e){return[].map.call(e,(function(e){return e}))}function f(a,r){e.querySelector(a).textContent=r}this.run=function(){f(".global-message",`Starting ${a} workers to brute force the SHA256 hash ${s}.`);const p=-1===libs2Load.indexOf("shared.js")?".min":"",g=libs2Load.findIndex((e=>-1!==e.indexOf("shared.")));libs2Load[g]+=r,function(e,a){const r=Math.ceil(e/a),n=[];let t=1;for(let e=1;e<a;e++)n.push({low:t,high:t+r}),t+=r;return n.push({low:t,high:e+1}),n}(i,a).forEach((function(a,i){const g=new Worker(`../js/workers/BruteForceWorker${p}.js${r}`);!function(a){const r=e.createElement("div");r.id="worker-"+a,r.classList.add("worker"),r.classList.add("col-md-4"),r.innerHTML=`<div class="card m-2"><h5 class="card-header title">WORKER ${a}</h5><div class="card-body"><h5 class="card-title passphrase">Passphrase</h5><p class="card-text value"></p><h5 class="card-title hash">Hash</h5><p class="card-text value"></p><h5 class="card-title remaining">Combinations left</h5><p class="card-text value"></p></div></div>`,e.querySelector(".workers").appendChild(r)}(i),g.addEventListener("message",(function(a){const r=JSON.parse(arrayBufferToBinaryStringExp(a.data));if(r.update)f(`#worker-${i} .passphrase + .value`,r.update.passphrase),f(`#worker-${i} .hash + .value`,r.update.hash),f(`#worker-${i} .remaining + .value`,r.update.remaining);else if(r.found)f(`#worker-${i} .passphrase + .value`,r.found.passphrase),f(`#worker-${i} .hash + .value`,r.found.hash),f(`#worker-${i} .remaining + .value`,r.found.remaining),e.querySelector("#worker-"+i).classList.add("found"),f(".global-message",`Worker ${i} found the passphrase ${r.found.passphrase} within ${(new Date).getTime()-d.getTime()}ms!`),c.forEach((function(e){null!==e&&(e.terminate(),e=null)})),c=[],h(e.querySelectorAll(".worker.done:not(.found)")).forEach((function(e){e.classList.add("done")})),null!=l&&l(r.found.passphrase);else if(r.done){f(`#worker-${i} .passphrase + .value`,r.done.passphrase),f(`#worker-${i} .hash + .value`,r.done.hash),f(`#worker-${i} .remaining + .value`,"0"),e.querySelector(`#worker-${i}`).classList.add("done"),c[i].terminate(),c[i]=null;let a=!0;c.forEach((function(e){null!==e&&(a=!1)})),!0===a&&(h(e.querySelectorAll(".worker.done:not(.found)")).forEach((function(e){e.classList.add("failed")})),f(".global-message","nothing found, sorry :-/"))}})),g.addEventListener("error",u,!1);const k={libs2Load:libs2Load,hash:s,range:a,alphabet:t,passCharacterLength:o,updateRate:n},m=binaryStringToArrayBufferExp(JSON.stringify(k));g.postMessage(m,[m]),c.push(g)})),d=new Date},this.clear=function(){d=null,c.forEach((function(e){null!==e&&e.terminate()})),c=[],h(e.querySelectorAll(".workers *")).forEach((function(e){e.parentNode.removeChild(e)})),f(".global-message","")}}$("#btnCrack").on("click",(function(){if(null!==e)return e.clear(),e=null,void $("#btnCrack").text("Crack");const a=$("#txtHash").val(),r=$("#txtAlphabet").val();if(null===a||""===a||null===r||""===r)return void $(".global-message").text("nothing to decode");$("#btnCrack").text("Cancel");const t=$("#ddlWorkerCount").val(),s=$("#ddlUpdateRate").val(),o=hashExp(a);e=new n(document,t,s,r,o,a.length,(function(){$("#btnCrack").text("Reset")})),e.clear(),e.run()}))}
//# sourceMappingURL=BruteForce.min.js.map
