@model Hashes
@inject Microsoft.Extensions.Configuration.IConfiguration Conf
@using DotnetPlayground.Controllers
@{
	ViewBag.Title = "MyRainbow rainbow table";
}
<h2>Rainbow table trivial example</h2>
@{
	if (((HashesInfo)ViewBag.Info) != null && ((HashesInfo)ViewBag.Info).IsCalculating == false)
	{
		<cache expires-after="@(DotnetPlayground.Repositories.HashesRepository.HashesInfoExpirationInMinutes)">
			<p>
				Search for <strong>@(((HashesInfo)ViewBag.Info).KeyLength)</strong> character MD5 or SHA256 hash source string. Alphabet is '@(((HashesInfo)ViewBag.Info).Alphabet)'
			</p>
			<p>
				Hashes count: <strong>@(((HashesInfo)ViewBag.Info).Count)</strong>
				last updated <span id="spLastDate">@DateTime.Now.ToString("O")</span>
			</p>
		</cache>
	}
	else
	{
		<p>Calculating...wait about 10 secs or so...and refresh the page</p>
	}
}

<form action="~/@(HashesController.ASPX)/@(nameof(HashesController.Search))" method="post" id="theForm" class="col-sm-12 row g-3">
	<div asp-validation-summary="All" class="text-danger"></div>
	<div class="col-12">
		@Html.AntiForgeryToken()
		@Html.Hidden("ajax", false)
		<div class="col-md-10">
			@foreach (KindEnum knd in Enum.GetValues(typeof(KindEnum)))
			{
				<label class="hash-kind form-check-label">
					<input asp-for="Kind" type="radio" id="@("knd" + (int)knd)" name="Kind" value="@knd"
						class="form-check-input" />
					@knd
				</label>
				<span asp-validation-for="Kind" class="text-danger"></span>
			}

			<input asp-for="Search" id="txtSearch" placeholder="hash to decode; >4 chars autocomplete"
				data-rule-hashlength="true" class="form-control" style="max-width:none" />
			<span asp-validation-for="Search" class="text-danger"></span>
		</div>
	</div>
	<div class="col-12">
		<div class="col-md-10">
			<button type="submit" id="btnSearch" class="btn btn-lg btn-warning">Search</button>
		</div>
	</div>
	<div class="col-12">
		<div id="divResult" class="col-md-10">@(Model != null && Model.Key.StartsWith("error") ? Model.Key : "")</div>
	</div>
</form>
<table id="result_tab" class="table table-striped table-sm" style='@(Model != null && !Model.Key.StartsWith("error") ? "" : "display:none")'>
	<thead><tr><th>Key</th><th>MD5</th><th>SHA256</th>
		<th><button class="btn btn-success fw-bold text-nowrap pe-3" title="Validate all" value="ValidateAll" onclick="clientValidateAll()">ALL ⇩</button></th>
	</tr></thead>
	<tbody>
		<tr id="trFirstResult">
			<td id="res_cel_key">@Model?.Key</td>
			<td id="res_cel_md5">@Model?.HashMD5</td>
			<td id="res_cel_sha256">@Model?.HashSHA256</td>
			<td id="res_cel_clientValidate">
				<button class="btn btn-success btn-sm" title="Validate" value="Validate" onclick="clientValidate(this)">Validate</button>
			</td>
		</tr>
	</tbody>
</table>
@section scripts
{
	@await Html.PartialAsync("_CryptoJSScriptsPartial")

	<environment include="Development">
		<script type="text/javascript" src="~/js/Hashes.js" asp-append-version="true"></script>
	</environment>
	<environment exclude="Development">
		<script type="text/javascript" src="~/js/Hashes.min.js" asp-append-version="true"></script>
	</environment>
	<script type="text/javascript">
		window.addEventListener('load', HashesOnLoad);
	</script>

	@await Html.PartialAsync("_ValidationScriptsPartial")
}
